常用命令
创建文件夹：mkdir <File>
进入目录：cd <目录>
显示当前目录:pwd
显示隐藏目录:ls -ah

git使用笔记
1.建立一个文件夹，使用命令mkdir learngit;
2.将建立好的文件夹初始化成一个仓库,使用命令 git init;
3.添加文件到git仓库分为两步：
（1）使用命令git add <file>,注意，可以多次添加；
（2）使用命令git commit -m,完成;
-m后面输入的是本次提交说明，这样可以方便找到改动记录；
4.文件夹下面会生成一个隐藏文件 .git,如果看不到该文件可以使用命令 ls -ah;
5.git status命令可以时刻掌握当前的状态；
6.git diff命令可以查看修改的变化；
7.git log用来查看提交历史，前面的数字表示版本号（添加 --pretty=oneline命令减少信息量）；
8.git reset --hard <版本号>用到恢复到你想要的版本；
9.git reflog查看命令历史,以便确定要回到未来哪个版本;
10.名词解释：
	工作区：指在电脑中的目录；
	版本库：工作区下有一个隐藏文件.git，这个不算工作区，而是git的版本库
	暂存区：版本库里最重要的就是stage或者叫做index的暂存区，前面所讲的往git版本库里添加的时候，第一步的git add把文件添加进去实际上就是把文件修改加到暂存区；
	git还为我们自动创建了一个分支master，以及指向master的一个指针叫HEAD.
	git commit提交更改实际上就是把暂存区的所有内容提交到当前分支；
11.每次修改完文件后都要git add文件；
12.撤销修改：git checkout -- file可以丢弃工作区的修改
git reset HEAD file可以把暂存区的修改撤销掉，重新放回工作区，之后再次使用git checkout --filte丢弃工作区的修改；
13.git rm 删除文件
14.github网站就是提供git仓库托管服务的，也就是远程仓库；

15.如何将本地仓库推送到远程仓库中，实现同步呢？
步骤1：在GitHub上创建一个仓库；
步骤2：在本地的仓库下右键启动git bush命令，根据GitHub提示，在git命令中输入运行命令：
$ git remote add origin git@github.com:michaelliao/learngit.git
其中origin表示远程仓库的名字
步骤3：将本地库的所有内容推送到远程库上：
$ git push -u origin master
完成上述步骤以后，在GitHub上就可以看到本地仓库和远程仓库保持一致了。

16.从远程库克隆
使用命令：git clone git@github.com:michaelliao/gitskills.git
Duang！就可以在你的本地仓库看到啦。

17.分支应用
应用场景：开发时，在分支上进行每天的工作，当工作完成时再一次性合并到原来的分支上；
应用步骤：1.查看当前分支：git branch，*标识的标识当前分支
		  2.创建一个分支并切换到该分支：git checkout -b <name>
		      分开标识：创建分支：git branch <name>
		      切换分支：git checkout <name>
		  3.切换到了新建的分支后，可以随意提交代码到该分支下；
		  4.工作全部完成后如何将新分支下的内容合并到master分支下呢？
			  使用命令：git merge <name>将新分支合并；
		  5.合并后就可以删掉新分支了，使用命令 git branch -d <name>
		  
18.在分支上提交又在master上做了提交，git会无法执行快速合并，必须手动解决冲突再提交；
当git无法自动合并分支时，就必须首先解决冲突，再提交，合并完成用git log --graph命令可以看到分支合并图；

19.在多人合作项目时一些要注意的问题：
	1.首先，可以试图用git push origin branch-name推送自己的修改；

	2.如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；

	3.如果合并有冲突，则解决冲突，并在本地提交；

	4.没有冲突或者解决掉冲突后，再用git push origin branch-name推送就能成功！

	5.如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream branch-name origin/branch-name。

	这就是多人协作的工作模式，一旦熟悉了，就非常简单。
	
20. 
1、查看远程库信息使用git remote -v;
2、在本地新建的分支如果不推送到远程，对其他人就是不可见的；
3、在本地推送分支，使用git push origin branch-name,如果推送失败说明远程仓库上有最新
的版本，可以先用git pull抓取最新提交；
4、在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name,本地和远程分支的名称最好一致；
5、建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；
6、从远程抓取分支，使用git pull，如果有冲突要处理冲突；

test



